---
- name: get secrets from server 1
  slurp: src={{ item }}
  with_items:
    - /data/wordpress/mysql_admin_pass
    - /data/wordpress/mysql_user_pass
  register: wordpress_secrets

- name: get secrets from server 2
  set_fact: 
    mysql_admin_pass: "{{ wordpress_secrets.results | selectattr('item', 'equalto', '/data/wordpress/mysql_admin_pass') | map(attribute='content') | list | first | b64decode | regex_replace('\\s', '') }}" 
    mysql_user_pass: "{{ wordpress_secrets.results | selectattr('item', 'equalto', '/data/wordpress/mysql_user_pass') | map(attribute='content') | list | first | b64decode | regex_replace('\\s', '') }}" 

- name: create folder struct for wordpress
  file: 
    path: "{{ item }}"
    state: "directory"
    owner: www-data
    group: www-data
  with_items:
    - "/data/wordpress/"
    - "/data/wordpress/config"
    - "/data/wordpress/data/"
    - "/data/wordpress/db/"

- name: create config files
  template: src={{ item }} dest=/data/wordpress/config/{{ item }}
  with_items: 
    - uploads.ini

- name: start wordpress-db docker
  docker_container: 
    name: wordpress-db
    image: mariadb:10
    hostname: wordpress-db
    state: started
    restart_policy: always
    volumes:
      - /data/wordpress/db/:/var/lib/mysql
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_admin_pass }}"
      MYSQL_PASSWORD: "{{ mysql_user_pass }}"
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress

- name: start wordpress-app docker
  docker_container: 
    name: wordpress-app
    image: wordpress:4.8.0-php7.1-apache
    state: started
    restart_policy: always
    volumes:
      - /data/wordpress/config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - /data/wordpress/data:/var/www/html
    ports:
      - 127.0.0.1:42007:80
    links:
      - wordpress-db:mysql
    env:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: "{{ mysql_user_pass }}"
      