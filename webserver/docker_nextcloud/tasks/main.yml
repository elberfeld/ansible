---
# Pakete installieren
- name: pakete installieren
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - curl

- name: get secrets from server 1
  slurp: src={{ item }}
  with_items:
    - /srv/nextcloud/mysql_admin_pass
    - /srv/nextcloud/mysql_user_pass
  register: nextcloud_secrets

- name: get secrets from server 2
  set_fact: 
    mysql_admin_pass: "{{ nextcloud_secrets.results | selectattr('item', 'equalto', '/srv/nextcloud/mysql_admin_pass') | map(attribute='content') | list | first | b64decode | regex_replace('\\s', '') }}" 
    mysql_user_pass: "{{ nextcloud_secrets.results | selectattr('item', 'equalto', '/srv/nextcloud/mysql_user_pass') | map(attribute='content') | list | first | b64decode | regex_replace('\\s', '') }}" 

- name: create folder struct for nextcloud
  file: 
    path: "{{ item }}"
    state: "directory"
    owner: www-data
    group: www-data
  with_items:
    - "/srv/nextcloud/"
    - "/srv/nextcloud/data/"
    - "/srv/nextcloud/db/"
    - "/srv/nextcloud/tmp/"
    - "/tmp/docker_nextcloud_ocr/"

- name: create folder struct for nextcloud 2
  file: 
    path: "{{ item }}"
    state: "directory"
    owner: 8983
    group: 8983
  with_items:
    - "/srv/nextcloud/solr/"

- name: start nextcloud-redis docker
  docker_container: 
    name: nextcloud-redis
    image: redis:4.0
    hostname: nextcloud-redis
    state: started
    restart_policy: always

- name: clone nextcloud-ocr repo
  git: 
    repo: "https://github.com/janis91/ocr.git" 
    version: "f023d1cb62e41143d441682f247ba9243b7ee667"
    dest: "/tmp/docker_nextcloud_ocr/" 
    force: "yes"
  register: gitclone 

- name: clone repo status 
  debug: 
    msg: "{{gitclone}}"

- name: build nextcloud-ocr image 
  docker_image: 
    name: "nextcloud-ocr-{{ gitclone.after }}"
    path: /tmp/docker_nextcloud_ocr/worker/
    state: present 
    buildargs:
      LANGUAGES: "tesseract-ocr-deu"

- name: start nextcloud-ocr docker
  docker_container: 
    name: nextcloud-ocr
    image: nextcloud-ocr-{{ gitclone.after }}
    hostname: nextcloud-ocr
    state: started
    restart_policy: always
    links:
      - nextcloud-redis:redis
    volumes:
      - /srv/nextcloud/data/data/:/home/node/data:ro
      - /srv/nextcloud/tmp/:/home/node/output
    env:
      NODE_ENV=production
      REDIS_HOST=redis
      REDIS_PORT=6379
      REDIS_DB=0

- name: start nextcloud-solr docker
  docker_container: 
    name: nextcloud-solr
    image: solr:6.6
    hostname: nextcloud-solr
    state: started
    restart_policy: always
    volumes:
      - /srv/nextcloud/solr/:/opt/solr/server/solr/mycores
    entrypoint:
      - "docker-entrypoint.sh solr-precreate nextcloud"

- name: start nextcloud-db docker
  docker_container: 
    name: nextcloud-db
    image: mariadb:10.3
    hostname: nextcloud-db
    state: started
    restart_policy: always
    volumes:
      - /srv/nextcloud/db/:/var/lib/mysql
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_admin_pass }}"
      MYSQL_PASSWORD: "{{ mysql_user_pass }}"
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
     
- name: start nextcloud-app docker
  docker_container: 
    name: nextcloud-app
    image: nextcloud:12.0-apache
    state: started
    restart_policy: always
    ports:
      - 127.0.0.1:42005:80
    links:
      - nextcloud-redis:redis
      - nextcloud-solr:solr
      - nextcloud-db:mysql
    volumes:
      - /srv/nextcloud/data/:/var/www/html/
      - /srv/nextcloud/tmp/:/tmp/nextcloudtemp/

- name: Cronjob f√ºr nextcloud cron
  cron: name="nextcloud-cron" weekday="*" hour="*" minute="*/15" job=" curl --silent http://127.0.0.1:42005/cron.php"
