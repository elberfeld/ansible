
# Pakete installieren
- name: nginx installieren
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - nginx
    - nginx-extras
    - ca-certificates 
    - certbot
    - git

# Git Repo nginx-lua-prometheus Clonen 

- name: clone nginx-lua-prometheus repository
  git: 
    repo: https://github.com/knyar/nginx-lua-prometheus.git 
    dest: /opt/nginx-lua-prometheus
    version: cb21d1442d0d2e86d4f4ffd3bf7097b3ff73c84d


# NginX einrichten 

- name: nginx default Konfig entfernen 
  file: 
    path: /etc/nginx/sites-enabled/default 
    state: absent

- name: nginx Konfigurationsdateien erstellen  
  template: src={{ item }} dest=/etc/nginx/conf.d/{{ item }}
  with_items: 
    - nginx-lua-prometheus.conf

# LetsEncrypt Script erstellen 

- name: LetsEncrypt Script erstellen 
  template: src=letsencrypt.sh dest=/opt/letsencrypt.sh mode=o+x
  register: letsencryptsh
  notify: restart nginx

- name: Cronjob f√ºr Zertifikatserneuerung
  cron: name="letsencrypt" weekday="2" hour="20" minute="0" job="/opt/letsencrypt.sh"


# nginx konfigurieren (initial, falls noch kein Zertifikat existiert)

- set_fact:
    nginx_https: False
  when: letsencryptsh.changed

- name: Konfig-Datei default erstellen (httponly)
  template: src=nginx-site dest=/etc/nginx/sites-enabled/{{ item }}.void.ms
  with_items: 
    - "{{ webserver_domains }}"
  when: letsencryptsh.changed

- name: nginx restarten (httponly)
  service: name=nginx state=restarted
  when: letsencryptsh.changed

- name: Letsencrypt-Zertifikat beantragen und installieren 
  shell: "/opt/letsencrypt.sh" 
  when: letsencryptsh.changed 


# nginx konfigurieren

- set_fact:
    nginx_https: True

- name: Konfig-Datei default erstellen
  template: src=nginx-site dest=/etc/nginx/sites-enabled/{{ item }}.void.ms
  with_items: 
    - "{{ webserver_domains }}"
  notify: restart nginx

