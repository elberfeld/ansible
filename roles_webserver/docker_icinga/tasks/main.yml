---

- include_tasks: ../functions/get_secret.yml
  with_items:
    - { path: "{{ basedir }}/forward_auth_secret", length: 64 }
    - { path: "{{ basedir }}/oauth_client_secret", length: 64 }
    - { path: "{{ basedir }}/icinga_admin_pass",   length: 12 }
    - { path: "{{ basedir }}/icinga_api_user",     length: 8 }
    - { path: "{{ basedir }}/icinga_api_pass",     length: 8 }
    - { path: "{{ basedir }}/mysql_admin_pass",    length: 12 }
    - { path: "{{ basedir }}/mysql_user_pass",     length: 12 }


- name: Setup OAuth Client Info 
  ansible.builtin.debug:
    msg: "Client ID: {{ servicename }} // Client Secret: {{ oauth_client_secret }} // Redirect-URI: https://{{ domain }}/_oauth" 


- name: pakete installieren
  apt:
    update_cache: no
    state: present
    name: 
      - logrotate


- name: icinga LogRotate config erstellen 
  template: 
    src: logrotate 
    dest: /etc/logrotate.d/icinga


- name: "create folder struct for {{ servicename }}"
  file: 
    path: "{{ item }}"
    state: "directory"
  with_items:
    - "{{ basedir }}"
    - "{{ basedir }}/data/"
    - "{{ basedir }}/etc/"
    - "{{ basedir }}/log/"
    - "{{ basedir }}/db/"
    - "{{ basedir }}/graphite-conf/"
    - "{{ basedir }}/graphite-storage/"


- name: Konfig-Dateien erstellen (base)
  template:
    src: "{{ item }}"
    dest: "{{ basedir }}/{{ item }}"
  with_items:
    - Dockerfile
    - docker-compose.yml
    - check_rbl_helper.sh
    - notify_by_pushover.sh
    - etc/locale.gen
    - etc/oauth_header.conf
  notify: restart icinga docker
  register: dockerconfig

- stat:
    path: "{{ basedir }}/etc/icingaweb2/CONFIGURED"
  register: configured

- name: "start {{ servicename }} docker (init)"
  docker_compose:
    project_src: "{{ basedir }}"
    state: present
  when: configured.stat.exists == False

- name: "wait for {{ servicename }} docker (init)"
  wait_for:
    path: "{{ basedir }}/etc/icingaweb2/CONFIGURED"
  when: configured.stat.exists == False
  
- name: "stop {{ servicename }} docker (init)"
  docker_compose:
    project_src: "{{ basedir }}"
    state: absent
  when: configured.stat.exists == False

- name: Script Helper erstellen
  template: 
    src: "{{ item }}" 
    dest: "{{ basedir }}/{{ item }}"
    mode: u+x
  with_items:
    - debuglog_enable.sh
    - debuglog_disable.sh


- name: Konfig-Dateien erstellen (icinga,icingaweb2,graphite)
  template:
    src: "{{ item }}"
    dest: "{{ basedir }}/{{ item }}"
  with_items:
    - etc/icinga/conf.d/api-users.conf
    - etc/icinga/conf.d/commands2.conf
    - etc/icinga/conf.d/groups.conf
    - etc/icinga/conf.d/hosts_manual.conf
    - etc/icinga/conf.d/hosts.conf
    - etc/icinga/conf.d/notifications_pushover.conf
    - etc/icinga/conf.d/notifications.conf
    - etc/icinga/conf.d/services_backup.conf
    - etc/icinga/conf.d/services_config.conf
    - etc/icinga/conf.d/services_container.conf
    - etc/icinga/conf.d/services_domains.conf
    - etc/icinga/conf.d/services_exporters.conf
    - etc/icinga/conf.d/services_global.conf
    - etc/icinga/conf.d/services_mail.conf
    - etc/icinga/conf.d/services_manual.conf
    - etc/icinga/conf.d/services_mqttsensors.conf
    - etc/icinga/conf.d/services_openhab.conf
    - etc/icinga/conf.d/services_system.conf
    - etc/icinga/conf.d/services.conf
    - etc/icinga/conf.d/templates.conf
    - etc/icinga/conf.d/users_groups.conf
    - etc/icinga/conf.d/users_sample.conf
    - etc/icingaweb2/authentication.ini
    - etc/icingaweb2/groups.ini
    - etc/icingaweb2/resources.ini
    - etc/icingaweb2/roles.ini
    - graphite-conf/storage-schemas.conf
  notify: restart icinga docker

  
- name: "start {{ servicename }} docker"
  docker_compose:
    project_src: "{{ basedir }}"
    state: present
    build: "{{ dockerconfig.changed }}"
