
object CheckCommand "check_http_ok" {
  command = [ "/usr/lib/nagios/plugins/check_http"]

  arguments = {
    "-H" = {
      value = "$HOST$"
    }
    "-p" = {
      value = "$PORT$"
    }
  }
  
  vars.HOST = ""
  vars.PORT = 80
}

object CheckCommand "check_http_301" {
  command = [ "/usr/lib/nagios/plugins/check_http"]

  arguments = {
    "-H" = {
      value = "$HOST$"
    }
    "-p" = {
      value = "$PORT$"
    }
    "-e" = {
      value = "301 Moved Permanently"
    }
  }
  
  vars.HOST = ""
  vars.PORT = 80
}

object CheckCommand "check_https_ok" {
  command = [ "/usr/lib/nagios/plugins/check_http"]

  arguments = {
    "-H" = {
      value = "$HOST$"
    }
    "-p" = {
      value = "$PORT$"
    }
    "-S" = {}
    "--sni" = {}
  }
  
  vars.HOST = ""
  vars.PORT = 443
}

object CheckCommand "check_ssl_cert" {
  command = [ "/usr/lib/nagios/plugins/check_http"]

  arguments = {
    "-H" = {
      value = "$HOST$"
    }
    "-p" = {
      value = "$PORT$"
    }
    "-C" = {
      value = "$WARNING$,$CRITICAL$"
    }
    "--sni" = {}
  }
  
  vars.HOST = ""
  vars.PORT = 443
  vars.WARNING = ""
  vars.CRITICAL = ""
}

object CheckCommand "check_prometheus" {
  command = [ "/opt/nagios_plugins/check_prometheus_metric.sh"]

  arguments = {
    "-H" = {
      value = "http://{{prometheus.ip}}:{{prometheus.port}}"
    }
    "-q" = {
      value = "$QUERY$"
    }
    "-t" = {
      value = "$TYPE$"
    }
    "-n" = {
      value = "$NAME$"
    }
    "-w" = {
      value = "$WARNING$"
    }
    "-c" = {
      value = "$CRITICAL$"
    }
    "-m" = {
      value = "$METHOD$"
    }
    "-i" = {}
  }
  
  vars.QUERY = ""
  vars.NAME = ""
  vars.TYPE = ""
  vars.METHOD = ""
  vars.WARNING = ""
  vars.CRITICAL = ""
}

object CheckCommand "check_openhab2" {
    import "plugin-check-command"
    command = [ "/opt/icinga2-plugin-openhab2/check_openhab2.py" ]
    arguments += {
        "--protocol" = "$openhab2_protocol$"
        "--host" = "$openhab2_host$"
        "--port" = "$openhab2_port$"
        "--item" = {
		description = "openHAB 2 item name"
		value = "$openhab2_item$"
		}
        "--warning" = "$openhab2_warning$"
        "--critical" = "$openhab2_critical$"
        "--invertcheck" = "$openhab2_invertcheck$"
        "--stats" = {
		description = "General openHAB 2 stats"
		set_if = "$openhab2_stats$"
		}
        "--timeout" = "$openhab2_timeout$"
    }
    vars.openhab2_host = "$address$"
    vars.openhab2_stats = false
    vars.openhab2_invertcheck = false
}
