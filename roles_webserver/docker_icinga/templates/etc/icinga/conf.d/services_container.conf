
{% for host in groups['all'] %}
{% if hostvars[host].alert is defined and hostvars[host].alert %}

  {% if hostvars[host].alert.containers is defined %}

apply Service "prometheus_containers_count" {
  import "generic-service"

  check_command = "check_prometheus"
  enable_perfdata = false

  vars.QUERY = "engine_daemon_container_states_containers{job=\"{{host}}_docker\",state=\"running\"}"
  vars.NAME = "Containers running (Expected: {{ hostvars[host].alert.containers|length }})"
  vars.TYPE = "vector"
  vars.METHOD = "ne"
  vars.WARNING = "{{ hostvars[host].alert.containers|length }}"
  vars.CRITICAL = "{{ hostvars[host].alert.containers|length }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

    {% for  container in hostvars[host].alert.containers %}

apply Service "{{ container.name }} CPU" {
  import "generic-service"

  check_command = "check_prometheus"
  enable_perfdata = false

  vars.QUERY = "dockerstats_cpu_usage_ratio{job=\"{{host}}_dockerstats\",name=\"{{ container.name }}\"}"
  vars.NAME = "Container {{ container.name }} CPU"
  vars.TYPE = "vector"
  vars.METHOD = "gt"
  vars.WARNING = "{{ 80 * ansible_processor_count }}"
  vars.CRITICAL = "{{ 90 * ansible_processor_count }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "{{ container.name }} MEM" {
  import "generic-service"

  check_command = "check_prometheus"
  enable_perfdata = false

  vars.QUERY = "dockerstats_memory_usage_ratio{job=\"{{host}}_dockerstats\",name=\"{{ container.name }}\"}"
  vars.NAME = "Container {{ container.name }} MEM"
  vars.TYPE = "vector"
  vars.METHOD = "gt"
  vars.WARNING = "{{ 80 * ansible_processor_count }}"
  vars.CRITICAL = "{{ 90 * ansible_processor_count }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

    {% endfor %}

  {% endif %}

{% endif %}
{% endfor %}
