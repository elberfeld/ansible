
{% for host in groups['all'] %}
{% if hostvars[host].alert is defined and hostvars[host].alert %}

apply Service "node_metrics" {
  import "generic-service"

  check_command = "http"
  enable_perfdata = true

  vars.http_address = "{{hostvars[host].int_ip4}}"
  vars.http_port = 9100
  vars.http_uri = "/metrics"

  assign where host.name == "{{host}}" && host.vars.prometheus == true 
}

apply Service "node_load1" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_load1"
  vars.metric_operator = "gt"
  vars.metric_warn = "{{ hostvars[host].alert.load.warn }}"
  vars.metric_crit = "{{ hostvars[host].alert.load.crit }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "node_load5" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_load5"
  vars.metric_operator = "gt"
  vars.metric_warn = "{{ hostvars[host].alert.load.warn }}"
  vars.metric_crit = "{{ hostvars[host].alert.load.crit }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "node_load15" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_load15"
  vars.metric_operator = "gt"
  vars.metric_warn = "{{ hostvars[host].alert.load.warn }}"
  vars.metric_crit = "{{ hostvars[host].alert.load.crit }}"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "node_reboot_required" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_reboot_required"
  vars.metric_operator = "gt"
  vars.metric_warn = "0"
  vars.metric_crit = "1"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "apt_upgrades_pending" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "apt_upgrades_pending"
  vars.metric_operator = "gt"
  vars.metric_warn = "1"
  vars.metric_crit = "25"

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

  {% for disk in hostvars[host].alert.disks %}

apply Service "node_filesystem_free_bytes - {{disk.mountpoint}}" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_filesystem_free_bytes"
  vars.metric_labelname = "mountpoint"
  vars.metric_labelvalue = "{{disk.mountpoint}}"
  vars.metric_operator = "lt"
  vars.metric_warn = "{{disk.warn | human_to_bytes }}" 
  vars.metric_crit = "{{disk.crit | human_to_bytes }}" 

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

apply Service "node_filesystem_device_error - {{disk.mountpoint}}" {
  import "generic-service"

  check_command = "check_metric_value"
  enable_perfdata = true

  vars.metric_url = "http://{{hostvars[host].int_ip4}}:9100/metrics"
  vars.metric_name = "node_filesystem_device_error"
  vars.metric_labelname = "mountpoint"
  vars.metric_labelvalue = "{{disk.mountpoint}}"
  vars.metric_operator = "gt"
  vars.metric_warn = "0" 
  vars.metric_crit = "0" 

  assign where host.name == "{{host}}" && host.vars.prometheus == true && host.vars.os == "Linux"
}

  {% endfor %}


{% endif %}
{% endfor %}
