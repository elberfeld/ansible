
# Pakete installieren
- name: nginx installieren
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - nginx
    - git
    - ca-certificates 
    - gcc
    - libssl-dev 
    - libffi-dev
    - python
    - python-dev
    - virtualenv


- name: nginx default Konfig entfernen 
  file: 
    path: /etc/nginx/sites-enabled/default 
    state: absent


# sinp_le installieren 

- name: create folder simp_le 
  file: 
    path: "/opt/simp_le/" 
    state: "directory"

- name: clone simp_le repo
  git: 
    repo: "https://github.com/kuba/simp_le" 
    version: "3a103b76f933f9aef782a47401dd2eff5057a6f7"
    dest: "/opt/simp_le/" 


# LetsEncrypt Script erstellen 

- name: LetsEncrypt Script erstellen 
  template: src=letsencrypt.sh dest=/opt/letsencrypt.sh mode=o+x
  register: letsencryptsh

- name: Cronjob f√ºr Zertifikatserneuerung
  cron: name="letsencrypt" weekday="2" hour="20" minute="0" job="/opt/letsencrypt.sh"


# nginx konfigurieren (initial, falls noch kein Zertifikat existiert)

- name: check if fullchain.pem exists
  stat: path=/etc/ssl/fullchain.pem
  register: sslcert

- name: Konfig-Datei default erstellen (initial)
  template: src=nginx-site dest=/etc/nginx/sites-enabled/{{ item }}.void.ms
  with_items: webserver_domains
  notify: restart nginx
  when: sslcert.stat.exists == False

- name: nginx restarten (initial)
  meta: flush_handlers
  when: sslcert.stat.exists == False

- name: Letsencrypt-Zertifikat beantragen und installieren 
  shell: "/opt/letsencrypt.sh" 
  when: sslcert.stat.exists == False or letsencryptsh.changed


# nginx konfigurieren

- name: Konfig-Datei default erstellen
  template: src=nginx-site dest=/etc/nginx/sites-enabled/{{ item }}.void.ms
  with_items: webserver_domains
  notify: restart nginx

