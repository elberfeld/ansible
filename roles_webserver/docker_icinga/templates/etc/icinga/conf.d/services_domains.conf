
{% for host in groups['all'] %}

  {% if hostvars[host].webserver_domains is defined %}
  {% for domain in hostvars[host].webserver_domains %}

apply Service "http_ok - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "http"
  enable_perfdata = false

  vars.http_address = "{{domain}}.void.ms"
  vars.http_vhost = "{{domain}}.void.ms"
  vars.http_port = 80

  assign where host.name == "{{host}}"
}

apply Service "http_301 - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "http"
  enable_perfdata = false

  vars.http_address = "{{domain}}.void.ms"
  vars.http_vhost = "{{domain}}.void.ms"
  vars.http_port = 80
  vars.http_expect = "301 Moved Permanently"

  assign where host.name == "{{host}}"
}

apply Service "https_ok - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "http"
  enable_perfdata = false

  vars.http_address = "{{domain}}.void.ms"
  vars.http_vhost = "{{domain}}.void.ms"
  vars.http_port = 443
  vars.http_ssl = true
  vars.http_sni = true

  assign where host.name == "{{host}}"
}

apply Service "https_cert - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "http"
  enable_perfdata = false

  vars.http_address = "{{domain}}.void.ms"
  vars.http_vhost = "{{domain}}.void.ms"
  vars.http_port = 443
  vars.http_ssl = true
  vars.http_sni = true
  vars.http_certificate = "10,5"

  assign where host.name == "{{host}}"
}

apply Service "dig(4) - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "{{domain}}.void.ms"
  vars.dig_record_type = "A"
  vars.dig_expected_address = "{{ hostvars[host].ext_ip4 }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

apply Service "dig(6) - {{domain}}.void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "{{domain}}.void.ms"
  vars.dig_record_type = "AAAA"
  vars.dig_expected_address = "{{ hostvars[host].ext_ip6 }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

  {% endfor %}
  {% endif %}

{% endfor %}


apply Service "CAA record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "void.ms"
  vars.dig_record_type = "CAA"
  vars.dig_expected_address = "letsencrypt.org"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

apply Service "mx record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "void.ms"
  vars.dig_record_type = "MX"
  vars.dig_expected_address = "{{ mail_global.mxserver }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

apply Service "spf record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "void.ms"
  vars.dig_record_type = "TXT"
  vars.dig_expected_address = "{{ mail_global.spf }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

apply Service "DMARC record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "_dmarc.void.ms"
  vars.dig_record_type = "TXT"
  vars.dig_expected_address = "{{ mail_global.dmarc }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

apply Service "Domainkey record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "_domainkey.void.ms"
  vars.dig_record_type = "TXT"
  vars.dig_expected_address = "{{ mail_global.domainkey }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

{% for entry in mail_global.dkim %}

apply Service "DKIM {{entry.selector}} record - void.ms" {
  import "generic-service"

  check_command = "dig"
  enable_perfdata = false

  vars.dig_lookup = "{{entry.selector}}._domainkey.void.ms"
  vars.dig_record_type = "TXT"
  vars.dig_expected_address = "{{ entry.value }}"
  vars.dig_arguments = "+tcp"

  assign where host.address && host.vars.is_dnsserver == "True"
}

{% endfor %}

