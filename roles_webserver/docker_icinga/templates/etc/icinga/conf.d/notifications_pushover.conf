
object NotificationCommand "pushover-host-notification" { 
  import "plugin-notification-command" 

  command = [ "/opt/notify_by_pushover.sh" ] 

  env = { 
      PUSHOVERUSER = "$user.vars.pushover_user$" 
      PUSHOVERTOKEN = "$user.vars.pushover_token$" 
      PUSHOVERTITLE = "Icinga @ {{ inventory_hostname }}" 
      PUSHOVERMESSAGE = "$notification.type$ $host.display_name$ $host.state$ $icinga.long_date_time$" 
    } 
} 

object NotificationCommand "pushover-service-notification" { 
  import "plugin-notification-command" 

  command = [ "/opt/notify_by_pushover.sh" ] 

  env = { 
    PUSHOVERUSER = "$user.vars.pushover_user$" 
    PUSHOVERTOKEN = "$user.vars.pushover_token$" 
    PUSHOVERTITLE = "Icinga @ {{ inventory_hostname }}" 
    PUSHOVERMESSAGE = "$notification.type$ $host.display_name$ $service.display_name$ $service.state$ $icinga.long_date_time$" 
  } 
} 

template Notification "pushover-host-notification" { 
  command = "pushover-host-notification" 

  states = [ Up, Down ] 
  types = [ Problem, Recovery, Custom, FlappingStart, FlappingEnd ] 

  period = "24x7" 
} 

template Notification "pushover-service-notification" { 
  command = "pushover-service-notification" 

  states = [ OK, Warning, Critical, Unknown ] 
  types = [ Problem, Recovery, Custom, FlappingStart, FlappingEnd ] 

  period = "24x7" 
} 

apply Notification "pushover-icingaadmins" to Host { 
  import "pushover-host-notification" 

  user_groups = ["icingaadmins"] 

  interval = 1h
  times.begin = 15m

  assign where host.address 
} 

apply Notification "pushover-icingaadmins" to Service { 
  import "pushover-service-notification" 

  user_groups = ["icingaadmins"] 

  interval = 1h
  times.begin = 15m

  assign where service.name
} 

